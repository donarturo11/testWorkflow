name: Build common deps

on:
  workflow_dispatch:
    inputs:
      publish-www:
        description: 'Publish on WWW'
        required: false
        type: boolean
      build-type:
        description: 'Build type'
        required: false
        type: string
      BUILD_TYPE:
        type: environment
        
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  PROJECT_NAME: test
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        qt-version: [ 5, 6 ]
        name: [ "windows-msvc", "windows-mingw", "linux", "macos-arm64", "macos-x86_64" ]
        include:
          - name: "windows-msvc"
            os: "windows-latest"
          - name: "windows-mingw"
            os: "windows-latest"
          - name: "linux"
            os: "ubuntu-latest"
          - name: "macos-arm64"
            os: "macos-14"
          - name: "macos-x86_64"
            os: "macos-13"

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
    - name: CWD before checkout
      run: pwd
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup common environment
      run: |
         CWD=$(cd $RUNNER_WORKSPACE; pwd)
         echo "FULL_NAME=${{ env.PROJECT_NAME }}-qt${{ matrix.qt-version }}-${{ matrix.name }}" >> $CWD/project.env
    - name: Setup MinGW
      uses: msys2/setup-msys2@v2
      if: ${{ matrix.name == 'windows-mingw' }}
      with:
        update: true
        cache: true
        msystem: ucrt64
        pacboy: toolchain cmake
    - name: setup vcpkg
      if: ${{ matrix.name == 'windows-msvc' }}
      run: |  
        echo
        #CWD=$(cd $RUNNER_WORKSPACE; pwd)
        #cd $CWD
        #VCPKG_ROOT=$CWD/vcpkg
        #[ ! -e $VCPKG_ROOT ] && mkdir -p $VCPKG_ROOT
        #curl -qL https://github.com/microsoft/vcpkg/archive/refs/tags/2025.07.25.tar.gz -o vcpkg.tar.gz &> /dev/null
        #tar -xzf vcpkg.tar.gz --strip-components=1 -C $VCPKG_ROOT
        #echo VCPKG_ROOT=${VCPKG_ROOT} >> $GITHUB_ENV
        #echo VCPKG_MAX_CONCURRENCY=20 >> $GITHUB_ENV
        #bash $VCPKG_ROOT/bootstrap-vcpkg.sh
        #URL_ROOT=https://freeshell.de/arturwro/pub/vcpkg/ci-github-actions
        #REPO_FORMAT="{triplet}/{name}_{version}_{triplet}.zip#{sha}"
        #echo VCPKG_BINARY_SOURCES="clear;http,$URL_ROOT/$REPO_FORMAT,read" >> $GITHUB_ENV
    - name: setup msvc
      if: ${{ matrix.name == 'windows-msvc' }}
      uses: egor-tensin/vs-shell@v2
      with:
        arch: x64
    - name: install-dependencies
      run: echo ""
    - name: setup control artifacts
      run: |
        CWD=$(cd $RUNNER_WORKSPACE; pwd)
        export ARTIFACTS_DIR=$CWD/artifacts
        [ ! -e $ARTIFACTS_DIR ] && mkdir -p $ARTIFACTS_DIR
        echo "::notice::Save to $ARTIFACTS_DIR"
        echo '${{ toJSON(env) }}' >> $ARTIFACTS_DIR/env.json
        echo '${{ toJSON(github) }}' >> $ARTIFACTS_DIR/github.json
        echo '${{ toJSON(runner) }}' >> $ARTIFACTS_DIR/runner.json
        env | sort >> $ARTIFACTS_DIR/environment
        echo "ARTIFACTS_DIR=$ARTIFACTS_DIR" >> $CWD/project.env
        cat $CWD/project.env >> $GITHUB_ENV

    - name: Uploading ${{ env.FULL_NAME }}
      uses: actions/upload-artifact@v4
      with:
        name: "${{ env.FULL_NAME }}"
        path: "${{ env.ARTIFACTS_DIR }}/*"

name: Build common deps

on:
  push:
    branches: []
  workflow_dispatch:
    inputs:
      publish-www:
        description: 'Publish on WWW'
        required: false
        type: boolean
      build-type:
        description: 'Build type'
        required: false
        type: string
      BUILD_TYPE:
        type: environment
        
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  PROJECT_NAME: test
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        name: [ "windows-msvc", "windows-mingw", "linux", "macos-arm64", "macos-x86_64" ]
        include:
          - name: "windows-msvc"
            os: "windows-latest"
            shell: 'C:\msys64\usr\bin\bash.exe -leo pipefail {0}'
          - name: "windows-mingw"
            os: "windows-latest"
            shell: 'C:\msys64\usr\bin\bash.exe -leo pipefail {0}'
          - name: "linux"
            os: "ubuntu-latest"
          - name: "macos-arm64"
            os: "macos-14"
          - name: "macos-x86_64"
            os: "macos-13"

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ matrix.shell && matrix.shell || 'bash -leo pipefail {0}' }}
    steps: 
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup direnv
      env:
        DIRENV_GITHUB_API_TOKEN: ${{ github.token }}
      run: |
        curl https://direnv.net/install.sh | sed '32s#mingw\*#mingw\*\|msys\*#' | bash
        CWD=$(pwd)
        cd $CWD
        touch $CWD/.envrc
        cat <<'EOF' >> $CWD/.envrc
        CWD=(cd $(dirname ${BASH_SOURCE[0]}); pwd)
        if [[ -e $CWD/.env ]]; then
          set -a
          echo "Loading .env"
          source $CWD/.env
          set +a
        fi
        EOF
        echo 'export FOO=foo' > .envrc
        direnv allow .
        direnv export gha >> $GITHUB_ENV
    - name: run setup settings
      run: |
        echo "==="
        cat $DIRENV_FILE
        echo "==="
        echo "BAR=bar" >> .env
        direnv allow .
        direnv export gha
        echo "==="
    - name: Test
      run: |
        echo "FOO='$FOO'"
        echo "BAR='$BAR'"
    - name: Setup common environment
      run: |
         CWD=$(cd $RUNNER_WORKSPACE; pwd)
         echo "FULL_NAME=${{ env.PROJECT_NAME }}-qt${{ matrix.qt-version }}-${{ matrix.name }}" >> $CWD/project.env
    - name: install-dependencies
      run: echo "PWD=$(pwd)"
    - name: setup control artifacts
      run: |
        CWD=$(cd $RUNNER_WORKSPACE; pwd)
        export ARTIFACTS_DIR=$CWD/out
        [ ! -e $ARTIFACTS_DIR ] && mkdir -p $ARTIFACTS_DIR
        echo "::notice::Save to $ARTIFACTS_DIR"
        echo '${{ toJSON(env) }}' >> $ARTIFACTS_DIR/env.json
        echo '${{ toJSON(github) }}' >> $ARTIFACTS_DIR/github.json
        echo '${{ toJSON(runner) }}' >> $ARTIFACTS_DIR/runner.json
        env | sort >> $ARTIFACTS_DIR/environment
        echo "ARTIFACTS_DIR=$ARTIFACTS_DIR" >> $CWD/project.env
        cat $CWD/project.env >> $GITHUB_ENV

    - name: Uploading ${{ env.FULL_NAME }}
      uses: actions/upload-artifact@v4
      with:
        name: "${{ env.FULL_NAME }}"
        path: "${{ runner.workspace }}/out/*"

name: Build common deps

on:
  push:
    branches: []
  workflow_dispatch:
    inputs:
      publish-www:
        description: 'Publish on WWW'
        required: false
        type: boolean
      build-type:
        description: 'Build type'
        required: false
        type: string
      BUILD_TYPE:
        type: environment
        
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  PROJECT_NAME: test
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        name: [ "windows-msvc", "windows-mingw", "linux", "macos-arm64", "macos-x86_64" ]
        include:
          - name: "windows-msvc"
            os: "windows-latest"
          - name: "windows-mingw"
            os: "windows-latest"
          - name: "linux"
            os: "ubuntu-latest"
          - name: "macos-arm64"
            os: "macos-14"
          - name: "macos-x86_64"
            os: "macos-13"

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -leo pipefail {0}
    steps: 
    - uses: release-engineers/action-setup-bash@v1    
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: setup msys
      if: ${{ runner.os == 'Windows' }}
      run: |
        # export PATH="/c/msys64/usr/bin:$PATH"
        # bash -lc 'curl -L https://freeshell.de/arturwro/pub/MINGW/donarturo11.repo >> /etc/pacman.conf'
        # bash -lc 'pacman -Syu --noconfirm'
        # bash -lc 'pacman -S --noconfirm git'
        # echo "C:\\msys64\\usr\\bin" >> $GITHUB_PATH
        echo ""
    - run: touch .envrc; touch .env
    - uses: andreygubarev/setup-direnv@v1 
      with:
        version: 2.37.1
#    - name: Setup direnv
#      env:
#        DIRENV_GITHUB_API_TOKEN: ${{ github.token }}
#      run: |
#        echo "HOME: $(cd ~; pwd)"
#        CWD=$(cd $RUNNER_WORKSPACE; pwd)
#        if [[ $RUNNER_OS == 'Windows' ]]; then
#        env CWD=$CWD /c/msys64/usr/bin/bash -lc 'echo "_HOME=$HOME" >> /.env'
#          set -a; source $CWD/.env; set +a
#        else
#          _HOME=$HOME
#        fi
#        echo 'echo "Welcome to GithubAction environment"' >> $_HOME/.bashrc
#        curl https://direnv.net/install.sh | bash
#        echo 'eval "$(direnv hook bash)"' >> $_HOME/.bashrc
#        touch $CWD/.envrc
#        # env CWD=$CWD bash -lc 'direnv allow $CWD'
#        # echo "DIRENV_DIR=$DIRENV_DIR"
#        echo 'echo "Welcome to direnv"' >> $CWD/.envrc
#        echo 'export FOO=foo' >> $CWD/.envrc
#        echo "BAR='bar'" >> $CWD/.env
#        direnv allow $CWD
#        # direnv reload $CWD
#        cd $CWD
#        direnv export gha >> $GITHUB_ENV
    - name: run setup settings
      run: |
        # echo "HOME: $(cd ~; pwd)"
        # direnv reload
        # direnv status
        # [[ ! -z DIRENV_FILE && -f $DIRENV_FILE ]] && source $DIRENV_FILE
        # echo "FOO=$FOO"
        # echo "BAR=$BAR"
        # echo "==="
        # cd $RUNNER_WORKSPACE
        # [[ ! -e out ]] && mkdir out
        # env > out/test-direnv.env
        # bash -lc 'echo; env | grep "^DIRNAME"'
        echo "==="
    - name: Test
      run: |
        echo ""
    - name: Setup common environment
      run: |
         CWD=$(cd $RUNNER_WORKSPACE; pwd)
         echo "FULL_NAME=${{ env.PROJECT_NAME }}-qt${{ matrix.qt-version }}-${{ matrix.name }}" >> $CWD/project.env
    - name: install-dependencies
      run: echo "PWD=$(pwd)"
    - name: setup control artifacts
      run: |
        CWD=$(cd $RUNNER_WORKSPACE; pwd)
        export ARTIFACTS_DIR=$CWD/out
        [ ! -e $ARTIFACTS_DIR ] && mkdir -p $ARTIFACTS_DIR
        echo "::notice::Save to $ARTIFACTS_DIR"
        echo '${{ toJSON(env) }}' >> $ARTIFACTS_DIR/env.json
        echo '${{ toJSON(github) }}' >> $ARTIFACTS_DIR/github.json
        echo '${{ toJSON(runner) }}' >> $ARTIFACTS_DIR/runner.json
        env | sort >> $ARTIFACTS_DIR/environment
        echo "ARTIFACTS_DIR=$ARTIFACTS_DIR" >> $CWD/project.env
        cat $CWD/project.env >> $GITHUB_ENV

    - name: Uploading ${{ env.FULL_NAME }}
      uses: actions/upload-artifact@v4
      with:
        name: "${{ env.FULL_NAME }}"
        path: "${{ runner.workspace }}/out/*"

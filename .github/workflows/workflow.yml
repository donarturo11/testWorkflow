name: Build common deps

on:
  workflow_dispatch

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  PROJECT_NAME: test
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        qt-version: [ 5, 6 ]
        name: [ "windows-msvc", "windows-mingw", "linux", "macos-arm64", "macos-x86_64" ]
        include:
          - name: "windows-msvc"
            os: "windows-latest"
          - name: "windows-mingw"
            os: "windows-latest"
          - name: "linux"
            os: "ubuntu-latest"
          - name: "macos-arm64"
            os: "macos-14"
          - name: "macos-x86_64"
            os: "macos-13"

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - shell: bash
      run: |
        export FULL_NAME=${{ env.PROJECT_NAME }}-${{ matrix.name }}-qt${{ matrix.qt-version }}
        mkdir -p $RUNNER_WORKSPACE/artifacts/
        echo ARTIFACTS_DIR=$RUNNER_WORKSPACE/artifacts/ >> $GITHUB_ENV
        echo FULL_NAME=$FULL_NAME >> $GITHUB_ENV
    - name: setup mingw variables
      if: ${{ matrix.name == 'windows-mingw' }}
      run: |
        echo "C:\\msys64\\usr\\bin" >> $GITHUB_PATH
        echo "C:\\msys64\\ucrt64\\bin" >> $GITHUB_PATH
        echo MSYSTEM=ucrt64 >> $GITHUB_ENV
        echo MSYS2_PATH_TYPE=inherit >> $GITHUB_ENV
        echo CHERE_INVOKING=1 >> $GITHUB_ENV
    - name: setup mingw variables
      if: ${{ matrix.name == 'windows-mingw' }}
      run: | 
        pacman -Syuu --noconfirm
        pacman -S pactoys  --noconfirm
        pacboy -S toolchain --noconfirm
    - name: setup vcpkg
      if: ${{ matrix.name == 'windows-msvc' }}
      run: |  
        CWD=$(cd $RUNNER_WORKSPACE; pwd)
        cd $CWD
        VCPKG_ROOT=$CWD/vcpkg
        [ ! -e $VCPKG_ROOT ] && mkdir -p $VCPKG_ROOT
        curl -qL https://github.com/microsoft/vcpkg/archive/refs/tags/2025.07.25.tar.gz -o vcpkg.tar.gz &> /dev/null
        tar -xzf vcpkg.tar.gz --strip-components=1 -C $VCPKG_ROOT
        echo VCPKG_ROOT=${VCPKG_ROOT} >> $GITHUB_ENV
        echo VCPKG_MAX_CONCURRENCY=20 >> $GITHUB_ENV
        bash $VCPKG_ROOT/bootstrap-vcpkg.sh
        URL_ROOT=https://freeshell.de/arturwro/pub/vcpkg/ci-github-actions
        REPO_FORMAT="{triplet}/{name}_{version}_{triplet}.zip#{sha}"
        echo VCPKG_BINARY_SOURCES="clear;http,$URL_ROOT/$REPO_FORMAT,read" >> $GITHUB_ENV
    - name: setup msvc
      if: ${{ matrix.name == 'windows-msvc' }}
      uses: egor-tensin/vs-shell@v2
      with:
        arch: x64
    - run: |
        echo "::notice::Save to $ARTIFACTS_DIR"
        echo '${{ toJSON(env) }}' >> $ARTIFACTS_DIR/env.json
        echo '${{ toJSON(github) }}' >> $ARTIFACTS_DIR/github.json
        echo '${{ toJSON(runner) }}' >> $ARTIFACTS_DIR/runner.json
        env | sort >> $ARTIFACTS_DIR/environment
    - name: Uploading ${{ env.FULL_NAME }}
      uses: actions/upload-artifact@v4
      with:
        name: "temp-${{ env.FULL_NAME }}"
        path: "${{ env.ARTIFACTS_DIR }}/*"
  sign-macos-packages:
    needs: build
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.workspace }}/artifacts
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: temp*-macos-*
      - run: |
          cd $RUNNER_WORKSPACE/artifacts
          for i in *-macos-*
          do
            mv -v $i $i-signed
          done
      - name: Upload signed artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "macos-artifacts"
          path: ${{ runner.workspace }}/artifacts/*-macos-*

  all:
    needs: [ build, sign-macos-packages ]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.workspace }}/artifacts
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: temp-*
      - run: |
          cd $RUNNER_WORKSPACE/artifacts
          for i in temp-*;
          do
            mv -v $i ${i#temp-*}
          done
      - name: Uploading all
        uses: actions/upload-artifact@v4
        with:
          name: "common-artifacts"
          path: ${{ runner.workspace }}/artifacts
          

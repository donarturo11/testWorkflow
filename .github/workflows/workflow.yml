name: Build common deps

on:
  push:
    branches: []
  workflow_dispatch:
    inputs:
      publish-www:
        description: 'Publish on WWW'
        required: false
        type: boolean
      build-type:
        description: 'Build type'
        required: false
        type: string
      BUILD_TYPE:
        type: environment
        
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  PROJECT_NAME: test
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        name: [ "windows-msvc", "windows-mingw", "macos-arm64", "macos-x86_64", "linux-x86_64", "linux-arm" ]
        include:
          - name: "windows-msvc"
            os: "windows-latest"
            msystem: "MSYS"
          - name: "windows-mingw"
            os: "windows-latest"
            msystem: "UCRT64"
          - name: "macos-arm64"
            os: "macos-15"
          - name: "macos-x86_64"
            os: "macos-15-intel"
          - name: "linux-x86_64"
            os: "ubuntu-latest"
          - name: "linux-arm"
            os: "ubuntu-24.04-arm"

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps: 
    - name: setup bashenv
      run: echo "BASH_ENV=$(cd $RUNNER_WORKSPACE; pwd)/.bashrc" >> $GITHUB_ENV
    - name: Setup runner
      env:
        MATRIX_MSYSTEM: ${{ matrix.msystem }}
        OWNCLOUD_TOKEN: ${{ secrets.OWNCLOUD_TOKEN }}
      run: |
        cd $RUNNER_WORKSPACE
        export URL_ROOT=https://freeshell.de/owncloud/remote.php/webdav/CI/common/
        curl -H "Authorization: Basic $OWNCLOUD_TOKEN" -L $URL_ROOT/bashenv.bashrc >> $BASH_ENV
        source $BASH_ENV
        for directory in $BUILD_DIR $ARTIFACTS_DIR $SECRETS_DIR $ENVIRONMENT_DIR $PROFILE_DIR
        do
          [[ ! -e $directory ]] && mkdir -p $directory
        done
        curl -H "Authorization: Basic $OWNCLOUD_TOKEN" -L $URL_ROOT/secrets.tar.gz | tar -vxz
        if [[ -n $MATRIX_MSYSTEM ]]; then
          echo "export MSYSTEM=$MATRIX_MSYSTEM" >> $TOOLCHAIN_ENV
          echo "export MSYS2_PATH_TYPE=inherit" >> $TOOLCHAIN_ENV
          echo "export CHERE_INVOKING=1"        >> $TOOLCHAIN_ENV
          echo "source /c/msys64/etc/profile"   >> $TOOLCHAIN_ENV
        fi
    - name: Get host infos
      run: |
        echo "OSTYPE=$OSTYPE"
        echo "MACHTYPE=$MACHTYPE"
        echo "HOSTTYPE=$HOSTTYPE"
    - name: uname
      run: |
        echo UNAME_S=$(uname -s)
        echo UNAME_M=$(uname -m)
        echo UNAME_O=$(uname -o)
    - uses: donarturo11/testWorkflow/.github/actions/test-env@main
    - name: clang dump machine
      run: which clang; clang -dumpmachine
    - run: (env | grep -e '^MSYSTEM' -e '^MINGW' -e '^PATH' ) || echo "no msystem found"
    - name: Checkout repository
      uses: actions/checkout@v4
        
#    - name: Uploading
#      uses: actions/upload-artifact@v4
#      with:
#        name: "${{ env.FULL_NAME }}"
#        path: "${{ runner.workspace }}/out/*"

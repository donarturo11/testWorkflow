name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ ]
#  create:
#      tags: ['v*'] # Push events to matching v*, i.e. v1.0, v20.15.10
#  workflow_dispatch:
#      publish-www:
#        description: 'Publish on WWW'
#        required: false
#        type: boolean
#      publish-github:
#        description: 'Publish on GitHub'
#        required: false
#        type: boolean
env:
  pkgname: test
  IDENTITY_NAME: ${{ secrets.IDENTITY_NAME }}

jobs:
  build:
    strategy:
      matrix:
       qt: [5, 6]
       name: ["windows-msvc", "windows-mingw", "linux", "macos-arm64", "macos-x86_64"]
       include:
        - { name: "windows-msvc", os: windows-latest, flags: "", shell: 'pwsh', arch: "win64_msvc2019_64", aqt: true }
        - { name: "windows-mingw", os: windows-latest, flags: "", shell: 'msys2 {0}', msystem: 'UCRT64' }
        - { name: "linux", os: ubuntu-latest, flags: "", shell: 'bash'  }
        - { name: "macos-arm", os: macos-latest, flags: "-DCMAKE_OSX_ARCHITECTURES=\"arm64\"", shell: 'bash', aqt: true }
        - { name: "macos-x86_64", os: macos-latest, flags: "-DCMAKE_OSX_ARCHITECTURES=\"x86_64\"", shell: 'bash', aqt: true }
        
      
    runs-on: ${{matrix.os}}
    defaults:
      run:
        shell: ${{matrix.shell}}

    steps:
    - if: ${{ matrix.aqt }}
      uses: jurplel/install-qt-action@v3
      with:
        arch: ${{inputs.arch}}
        version: ${{matrix.qt == 6 && '6.2.0' || '5.15.2'}}
        modules: ${{matrix.qt == 6 && 'qtmultimedia' || ''}}
        
    - if: ${{ matrix.msystem }}
      name: Install MinGW
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
        update: true
        install: |
            base base-devel p7zip zip git
    
    - name: Test-${{ matrix.name }}-${{ matrix.qt }}
      run: echo "Finish"
